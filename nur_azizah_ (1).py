# -*- coding: utf-8 -*-
"""Nur Azizah .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10KMpX10g9GUAtQCYeJ96Tjr6XibkkeEy
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix

"""### Classification Metrics"""

import pandas as pd

data = {
    'NIM': ['1','2','3','4','5','6','7','8','9','10'],
    'Status Sebenarnya': ['Tidak DO', 'Tidak DO', 'Tidak DO', 'Tidak DO','Tidak DO', 'DO', 'DO', 'DO', 'DO', 'DO'],
    'Hasil Prediksi': ['Tidak DO', 'Tidak DO', 'Tidak DO', 'DO', 'DO', 'Tidak DO', 'DO', 'DO', 'DO', 'DO']
}

df = pd.DataFrame(data)

# df['Status Sebenarnya'] = df['Status Sebenarnya'].map({'Tidak DO': 0, 'DO': 1})

df['Hasil Prediksi'] = df['Hasil Prediksi'].map({'Tidak DO': 0, 'DO': 1})

# X = df[['Status Sebenarnya']]  # Features
X = df[['NIM']]  # Features

y = df['Hasil Prediksi']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=42)

df

print(X_train)

print(y_train)

clf = DecisionTreeClassifier()

clf = clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

precision = precision_score(y_test, y_pred, average='weighted')
print('Precision:', precision)

accuracy = accuracy_score(y_test, y_pred)
print( "Accuracy : " , accuracy)

recall = recall_score(y_test, y_pred, average='weighted')
print('Recall:',  recall)

f1 = f1_score(y_test, y_pred, average='weighted')
print("F1 Score:" , f1)

cm = confusion_matrix(y_test, y_pred)
print('Confusion Matrix: ')
print(cm)